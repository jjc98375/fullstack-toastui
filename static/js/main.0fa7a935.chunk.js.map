{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["value","App","editorRef","useRef","_useState","useState","_useState2","Object","slicedToArray","content","setContent","react_default","a","createElement","esm","initialValue","height","ref","initialEditType","theme","useCommandShortcut","plugins","colorSyntax","chart","id","className","onClick","edtContents","current","getInstance","getMarkdown","classNam","readOnly","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"oRAuFIA,EAAK,0BA8CMC,MA1Cf,WACE,IAAMC,EAAYC,mBADLC,EAEiBC,qBAFjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAENK,EAFMH,EAAA,GAEGI,EAFHJ,EAAA,GAUb,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,aAAcf,IACtBW,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,aAAa,UACbC,OAAO,QACPC,IAAKf,EACLgB,gBAAgB,UAChBC,MAAM,OACNC,oBAAoB,EACpBC,QAAS,CAACC,IAAaC,OAEzBZ,EAAAC,EAAAC,cAAA,OAAKW,GAAG,cACNb,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,OAAKW,GAAG,UACNb,EAAAC,EAAAC,cAAA,UAAQY,UAAU,WAAWC,QArBV,WACzB,IACIC,EADKzB,EAAU0B,QAAQC,cACNC,cACrBpB,EAAWiB,KAkBL,SAIFhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,YACEkB,SAAS,SACT/B,MAAOS,EACPuB,SAAS,iBCjHNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACPpC,EAAAC,EAAAC,cAACF,EAAAC,EAAMoC,WAAP,KACErC,EAAAC,EAAAC,cAACoC,EAAD,OAEFC,SAASC,eAAe,SAM1BlB","file":"static/js/main.0fa7a935.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\n// import { Editor, Viewer } from \"@toast-ui/react-editor\";\n\n// //css\n// import \"@toast-ui/editor/dist/toastui-editor.css\";\n\n// //color plugin\n// import \"tui-color-picker/dist/tui-color-picker.css\";\n// import \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\n// import colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\n\n// //chart plugin\n// import \"@toast-ui/chart/dist/toastui-chart.css\";\n// import chart from \"@toast-ui/editor-plugin-chart\";\n\n// let value = `\n//   # 큰제목\n//   ### 작은제목\n// `;\n\n// class App extends Component {\n//   editorRef = React.createRef();\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       content: \"\",\n//     };\n//   }\n\n//   handleChangeEditor = (e) => {\n//     const content = this.editorRef.current.getInstance().getMarkdown();\n//     this.setState({\n//       content: content,\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <Viewer initialValue={value} />\n//         <Editor\n//           // previewStyle=\"vertical\"\n//           height=\"400px\"\n//           initialEditType=\"wysiwyg\"\n//           initialValue=\"hello\"\n//           ref={this.editorRef}\n//           plugins={[colorSyntax, chart]}\n//         />\n//         <div id=\"toastUIEditor\">\n//           <h1>Toast UI Editor Example</h1>\n//           <div id=\"button\">\n//             <button className=\"btn_save\" onClick={this.handleChangeEditor}>\n//               Save\n//             </button>\n//           </div>\n//           <div>\n//             <h2>Result</h2>\n//             <textarea\n//               classNam=\"result\"\n//               value={this.state.content}\n//               readOnly=\"readOnly\"\n//             ></textarea>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n//--------------------------------Above is the working code, DO NOT TOUCH -----------------------------------------------\n\nimport React, { Component, useState, useRef } from \"react\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport { Editor, Viewer } from \"@toast-ui/react-editor\";\n\n//color plugin\nimport \"tui-color-picker/dist/tui-color-picker.css\";\nimport \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\n\n//chart plugin\nimport \"@toast-ui/chart/dist/toastui-chart.css\";\nimport chart from \"@toast-ui/editor-plugin-chart\";\n\nlet value = `\n  ### SE Technology\n`;\n\nfunction App() {\n  const editorRef = useRef();\n  const [content, setContent] = useState();\n\n  const handleChangeEditor = () => {\n    let ei = editorRef.current.getInstance();\n    let edtContents = ei.getMarkdown();\n    setContent(edtContents);\n  };\n\n  return (\n    <div>\n      <Viewer initialValue={value} />\n      <Editor\n        initialValue=\"hello?!\"\n        height=\"600px\"\n        ref={editorRef}\n        initialEditType=\"wysiwyg\"\n        theme=\"dark\"\n        useCommandShortcut={true}\n        plugins={[colorSyntax, chart]}\n      />\n      <div id=\"saveEditor\">\n        <h1>Toast UI Editor Example</h1>\n        <div id=\"button\">\n          <button className=\"btn_save\" onClick={handleChangeEditor}>\n            Save\n          </button>\n        </div>\n        <div>\n          <h2>Result</h2>\n          <textarea\n            classNam=\"result\"\n            value={content}\n            readOnly=\"readOnly\"\n          ></textarea>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}